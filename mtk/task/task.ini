task 配置
	app_task_config.h
	task_index(INDX_MEMORY_TASK) 
	task_module_map(INDX_MEMORY_TASK, MOD_MEMORY)
	task_name("MEMORY")
	task_queue_name("MEMORY Q")
	task_priority(TASK_PRIORITY_MEMORY)
	task_stack_size(6144)
	task_create_function(task_create)
	task_stack_internalRAM(KAL_FALSE)
	task_external_queue_size(20)
	task_internal_queue_size(0)
	task_boot_mode(NORMAL_M | USB_M)
填充task调用的结构体
	kal_bool task_create(comptask_handler_struct **handle)
	{
		static comptask_handler_struct mmi_handler_info = 
		{
		   memory_task,// memory_task,   //mmi_task
		   memory_Init,   /* task initialization function */
			NULL,
			NULL,       /* task reset handler */
			NULL,       /* task termination handler */
		};
		*handle = &mmi_handler_info;
		return KAL_TRUE;
	}	
memory_task:
	不断从外部队列获取消息处理。
	receive_msg_ext_q_for_stack没有消息时会导致task挂起
	
mmi_task:
	获取外部消息放置内部消息队列中
	读取内部消息队列
	protocol处理内部消息